<?php

use Illuminate\Filesystem\Filesystem;

Artisan::command('make:react_model {name?}', function($name = null){
	if($name === null){
		$name = $this->ask('What is your name of the model?');
	}
	Artisan::call("make:model -m -f Models/$name");
	$tpl = file_get_contents(__DIR__ . '/js_file_templates/model.blade.js');
	$rendered = str_replace('{{$name}}', $name, $tpl);
	file_put_contents(app_path("Models/$name.js"), $rendered);
	if(!is_file(app_path("Models/.index"))){
		file_put_contents(app_path("Models/.index"), '');
	}
	if(!is_file(app_path("Models/models.json"))){
		$current_models = [];
	}
	else{
		$current_models = json_decode(file_get_contents(app_path("Models/models.json")), true);
	}
	$current_models[] = $name;
	file_put_contents(app_path("Models/models.json"), json_encode($current_models));
	Artisan::call('write_index_files');
	$this->comment("Model: $name created");
});




Artisan::command('make:react_page {name?}', function($name = null){
	if($name === null){
		$name = $this->ask('What is your name of the page?');
	}
	$name = preg_replace('/^(.*?)_page$/', '$1', snake_case($name));
	$pathname = str_slug($name);
	$name = studly_case($name) . 'Page';
	if(!is_dir(app_path("Pages"))){
		mkdir(app_path("Pages"));
	}

	$tpl = file_get_contents(__DIR__ . '/js_file_templates/page.blade.js');
	$rendered = str_replace('{{$name}}', $name, $tpl);
	file_put_contents(app_path("Pages/$name.js"), $rendered);

	$tpl = file_get_contents(__DIR__ . '/js_file_templates/page_php.blade.js');
	$rendered = str_replace('{{$name}}', $name, $tpl);
	file_put_contents(app_path("Pages/$name.php"), $rendered);



	if(!is_file(app_path("Pages/.index"))){
		file_put_contents(app_path("Pages/.index"), '');
	}

	Artisan::call('write_index_files');
	$this->comment("Page: $name created");
	$this->comment("route registered at: " . url("/pages/$pathname"));
});






Artisan::command('write_schemas', function () {
    $models = json_decode(file_get_contents(app_path("Models/models.json")), true);
    $path = resource_path('js/schema.js');
    $schemas = [];
    foreach($models as $model){
        $class = "\App\\Models\\$model";
        $schemas[$model] = get_schema(new $class);
//         $schemas[$model] = get_schema($class::first());
    }
    $file_contents = collect($schemas)->toJSON();
    $file_contents = "export default $file_contents;\n";
    $filecomments = "/****************************************************
 *
 * THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
 *
 ****************************************************
 */
 ";
    file_put_contents($path, "$filecomments$file_contents");
    $this->comment("\n schema.js written to $path \n\n");

})->describe('Write out schemas to js directory');



function write_index_files($_this){
    // put a file called .index in a directory you want to index
    // this runs recursively

//     if($dir_start === false){
        $dir_start = app_path();
//     }
    $fs = new Filesystem;
    $dirs = collect($fs->allFiles($dir_start))
        ->map(function($f){ return $f->getPath(); })
        ->unique()
        ->filter(function($dir) use($fs){
            return $fs->exists("$dir/.index");
        });
    $dirs->each(function($dir) use($fs, $_this){
        $filenames = collect($fs->files($dir));
        $names = $filenames->map(function($file)use ($fs){
            $path = $file->getPathName();
            $name = $fs->name($path);
            if($name != 'index' && preg_match('/^js.?$/', $fs->extension($path))){
                return $name;
            }
            return null;
        })->filter();
        $imports = $names->map(function($name){
            return "import $name from './$name';";
        })->implode("\n");
        $exports = $names->implode(", ");
//
$filecomments = "/****************************************************
 *
 * THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
 *
 ****************************************************
 */
 ";

$contents = "
$filecomments
$imports

export { $exports };
";
        $fs->put("$dir/index.js", trim($contents) . "\n");
        $_this->comment("\n index.js written to $dir \n\n");
    });

}

Artisan::command('write_index_files', function(){
    // put a file called .index in a directory you want to index
    write_index_files($this);
});
